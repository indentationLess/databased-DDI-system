// <auto-generated />
using System;
using DDIAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDIAPI.Migrations
{
    [DbContext(typeof(DDIAPIContext))]
    partial class DDIAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DDIAPI.Models.ClinicalRecommendation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Reccomendation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("clinicalRecommendations");
                });

            modelBuilder.Entity("DDIAPI.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosageForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrugCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DrugName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenericDrugName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strength")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrugCategoryId");

                    b.ToTable("drugs");
                });

            modelBuilder.Entity("DDIAPI.Models.DrugCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("drugCategories");
                });

            modelBuilder.Entity("DDIAPI.Models.HealthCareProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("healthCareProviders");
                });

            modelBuilder.Entity("DDIAPI.Models.Interaction", b =>
                {
                    b.Property<int>("Drug1Id")
                        .HasColumnType("int");

                    b.Property<int>("Drug2Id")
                        .HasColumnType("int");

                    b.Property<int>("SeverityId")
                        .HasColumnType("int");

                    b.HasKey("Drug1Id", "Drug2Id");

                    b.HasIndex("Drug2Id");

                    b.HasIndex("SeverityId");

                    b.ToTable("interactions");
                });

            modelBuilder.Entity("DDIAPI.Models.MedicationLogs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("drugID")
                        .HasColumnType("int");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("drugID");

                    b.ToTable("medicationLogs");
                });

            modelBuilder.Entity("DDIAPI.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("DDIAPI.Models.Severity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("severities");
                });

            modelBuilder.Entity("DDIAPI.Models.SystemAlert", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("systemAlerts");
                });

            modelBuilder.Entity("DDIAPI.Models.Drug", b =>
                {
                    b.HasOne("DDIAPI.Models.DrugCategory", "drugCategory")
                        .WithMany("drugs")
                        .HasForeignKey("DrugCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("drugCategory");
                });

            modelBuilder.Entity("DDIAPI.Models.Interaction", b =>
                {
                    b.HasOne("DDIAPI.Models.Drug", "Drug1")
                        .WithMany("InteractionsAsDrug1")
                        .HasForeignKey("Drug1Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DDIAPI.Models.Drug", "Drug2")
                        .WithMany("InteractionsAsDrug2")
                        .HasForeignKey("Drug2Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DDIAPI.Models.Severity", "Severity")
                        .WithMany("Interactions")
                        .HasForeignKey("SeverityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Drug1");

                    b.Navigation("Drug2");

                    b.Navigation("Severity");
                });

            modelBuilder.Entity("DDIAPI.Models.MedicationLogs", b =>
                {
                    b.HasOne("DDIAPI.Models.Drug", "drug")
                        .WithMany()
                        .HasForeignKey("drugID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("drug");
                });

            modelBuilder.Entity("DDIAPI.Models.Drug", b =>
                {
                    b.Navigation("InteractionsAsDrug1");

                    b.Navigation("InteractionsAsDrug2");
                });

            modelBuilder.Entity("DDIAPI.Models.DrugCategory", b =>
                {
                    b.Navigation("drugs");
                });

            modelBuilder.Entity("DDIAPI.Models.Severity", b =>
                {
                    b.Navigation("Interactions");
                });
#pragma warning restore 612, 618
        }
    }
}
